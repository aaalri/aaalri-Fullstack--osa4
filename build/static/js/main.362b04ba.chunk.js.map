{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notifications.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","nameFilter","onChange","handleNameFilter","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","name","number","onClick","deletePerson","Persons","personsToShow","map","SuccessNotification","message","className","ErrorNotification","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","initialPersons","filter","toLowerCase","includes","event","target","preventDefault","window","confirm","personObject","findPerson","find","returnedPerson","copy","setTimeout","catch","error","p","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.362b04ba.chunk.js","sourcesContent":["import React from 'react'\r\n  \r\n  const Filter = (props) => {  return (\r\n        <div>\r\n            filter by name: <input\r\n                    value={props.nameFilter}\r\n                    onChange={props.handleNameFilter}       \r\n                />\r\n        </div>\r\n\t )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n  \r\n  const PersonForm = (props) => {  return (\r\n    <form onSubmit={props.addPerson}>\r\n        <div>\r\n        name: <input\r\n                value={props.newName}\r\n                onChange={props.handleNameChange}       \r\n                />\r\n        <br/>\r\n        number: <input\r\n                value={props.newNumber}\r\n                onChange={props.handleNumberChange}       \r\n                />\r\n        </div>\r\n        <div>                \r\n        <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n\t )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n  \r\n  const Person = (props) => {  return (\r\n\t\t<p>\r\n\t\t  {props.person.name} {props.person.number} <button onClick={props.deletePerson}>delete</button>\r\n\t\t</p>\r\n\t )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n  \r\n  const Persons = (props) => {  return (\r\n    <div>\r\n        {props.personsToShow.map(person => <Person key={person.name} person={person} deletePerson={() => props.deletePerson(person)} />)}\r\n    </div>\r\n\t )\r\n  }\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst SuccessNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport {SuccessNotification, ErrorNotification}","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst personService = { \r\n    getAll, \r\n    create, \r\n    remove,\r\n    update \r\n  }\r\n\r\nexport default personService;","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport { SuccessNotification, ErrorNotification } from './components/Notifications'\nimport personService from './services/persons'\n  \nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ successMessage, setSuccessMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n  }, [])\n\n  const handleNameFilter= (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map(person => person.name).includes(newName)){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personObject = {\n          name: newName,\n          number: newNumber,\n        }\n        let findPerson = persons.find(person => person.name === newName)\n        personService\n          .update(findPerson.id, personObject)\n          .then(returnedPerson => {\n            const copy = [...persons]\n            findPerson = copy.find(person => person.name === newName)\n            findPerson.number = newNumber\n            setPersons(copy)\n            setNewName('')\n            setNewNumber('')  \n            setSuccessMessage( \n              `${newName}'s number changed.`  \n              )       \n            setTimeout(() => { \n              setSuccessMessage(null)       \n              }, 5000)\n          }).catch(error => {\n            setErrorMessage( \n              `Information of ${newName} has already been deleted from the server.`  \n              )       \n            setTimeout(() => { \n              setErrorMessage(null)       \n              }, 5000)\n            setPersons(persons.filter(p => p.id !== findPerson.id))\n          })\n      }\n      return\n    }    \n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')  \n        setSuccessMessage( \n          `Succesfully added '${newName}'`  \n          )       \n        setTimeout(() => { \n          setSuccessMessage(null)       \n          }, 5000)\n      }).catch(error => {\n        setErrorMessage( \n          `${error.response.data.error}`  \n          )       \n        setTimeout(() => { \n          setErrorMessage(null)       \n          }, 5000)\n      })\n  }\n\n  const deletePerson = (person) => {\n    if (persons.includes(person)){\n      if (window.confirm(`Delete ${person.name}?`)) {\n        personService\n        .remove(person.id)\n        .then(returnedPerson => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n        setSuccessMessage( \n          `Succesfully removed '${person.name}'`  \n          )       \n        setTimeout(() => { \n          setSuccessMessage(null)       \n          }, 5000)\n      }      \n    }    \n  }\n\n  return (\n    <div>\n        <SuccessNotification message={successMessage} />\n        <ErrorNotification message={errorMessage} />\n      <h2>Phonebook</h2>\n        <Filter nameFilter={nameFilter} handleNameFilter={handleNameFilter} />\n      <h2>Add a new person</h2>\n        <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n\t\t</div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n  )"],"sourceRoot":""}